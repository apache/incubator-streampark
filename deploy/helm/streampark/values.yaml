#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# When enabled RBAC is only created for said namespaces, otherwise it is done for the cluster scope.
# watchNamespaces: ["streampark"]

timezone: "Asia/Shanghai"

image:
  repository: "apache/streampark"
  pullPolicy: "IfNotPresent"
  tag: "2.1.0"
  pullSecret: ""

rbac:
  create: true

spec:
  replicaCount: 1
  containerPort: 10000
  name: rest
  affinity: { }
  ## Compute Resources required by this container. Cannot be updated.
  ## More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
  nodeSelector: { }
  ## Tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission,
  ## effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.
  tolerations: [ ]
  ## Affinity is a group of affinity scheduling rules. If specified, the pod's scheduling constraints.
  ## More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#affinity-v1-core
  resources: { }
  # resources:
  #   limits:
  #     memory: "2Gi"
  #     cpu: "1"
  #   requests:
  #     memory: "1Gi"
  #     cpu: "500m"
  ## Indicates whether the container is running. If the liveness probe fails, the kubelet kills the container,
  ## and the container is subjected to its restart policy.
  ## More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    enabled: true
    initialDelaySeconds: "90"
    periodSeconds: "30"
    timeoutSeconds: "20"
    failureThreshold: "3"
    successThreshold: "1"
  ## Indicates whether the container is ready to respond to requests. If the readiness probe fails,
  ## the endpoints controller removes the Pod's IP address from the endpoints of all Services that match the Pod.
  ## More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  readinessProbe:
    enabled: true
    initialDelaySeconds: "90"
    periodSeconds: "30"
    timeoutSeconds: "20"
    failureThreshold: "3"
    successThreshold: "1"

ingress:
  enabled: false
  host: "streampark.apache.org"
  path: "/streampark"
  annotations: {}

service:
  ## type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer
  type: "NodePort"
  name: "streampark-service"

streamParkDefaultConfiguration:
  create: true
  # Set append to false to replace configuration files
  append: true
  # application.yaml: |+
  #   ...
  # logback-spring.xml: |+
  #   ...

streamParkServiceAccount:
  create: true
  annotations: {}
  name: "streampark"

nginx:
  ingress:
    kubernetes:
      configurationSnippet: "rewrite ^(/streampark)$ $1/ permanent;"
      proxyBbodySize: "1024m"
      rewriteTarget: "/$2"

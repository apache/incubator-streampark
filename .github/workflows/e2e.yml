#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - dev
      - release-*
      - dev-*

name: E2E

concurrency:
  group: e2e-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true


jobs:
  license-header:
    if: github.repository == 'apache/incubator-streampark'
    name: License header
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Check license header
        uses: apache/skywalking-eyes/header@main
  build:
    name: E2E-Build
    runs-on: ubuntu-latest
    needs: license-header
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e
          restore-keys: ${{ runner.os }}-maven-
      - name: Build Image
        run: |
          ./build.sh \
          && docker build -f docker/Dockerfile . -t apache/streampark:ci
      - name: Export Docker Images
        run: |
          docker save apache/streampark:ci -o /tmp/standalone-image.tar \
          && du -sh /tmp/standalone-image.tar
      - uses: actions/upload-artifact@v4
        name: Upload Docker Images
        with:
          name: standalone-image
          path: /tmp/standalone-image.tar
          retention-days: 1
  e2e:
    name: ${{ matrix.case.name }}
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        case:
          - name: UserManagementTest
            class: org.apache.streampark.e2e.cases.UserManagementTest
          - name: TeamManagementTest
            class: org.apache.streampark.e2e.cases.TeamManagementTest
    env:
      RECORDING_PATH: /tmp/recording-${{ matrix.case.name }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-e2e
          restore-keys: ${{ runner.os }}-maven-
      - uses: actions/download-artifact@v2
        name: Download Docker Images
        with:
          name: standalone-image
          path: /tmp
      - name: Load Docker Images
        run: |
          docker load -i /tmp/standalone-image.tar
      - name: Run Test
        run: |
          ./mvnw -B -f streampark-e2e/pom.xml -am \
            -DfailIfNoTests=false \
            -Dtest=${{ matrix.case.class }} test
      - uses: actions/upload-artifact@v4
        if: always()
        name: Upload Recording
        with:
          name: recording-${{ matrix.case.name }}
          path: ${{ env.RECORDING_PATH }}
          retention-days: 1
  result:
    name: E2E - Result
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: e2e
    if: always()
    steps:
      - name: Status
        run: |
          if [[ ${{ needs.e2e.result }} != 'success' ]]; then
            echo "E2E Failed!"
            exit -1
          fi

#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

image:
  repository: "apache/streampark"
  pullPolicy: "IfNotPresent"
  tag: "2.1.5"
  pullSecret: ""

rbac:
  create: true
  ## When enabled RBAC is only created for said namespaces, otherwise it is done for the cluster scope.
#  watchNamespaces: ["streampark"]

spec:
  container:
    env: [
      {
        name: TZ,
        value: "Asia/Shanghai"
      },
      {
        name: LANG,
        value: en_US.UTF-8
      },
      {
        name: LANGUAGE,
        value: en_US:en
      },
      {
        name: LC_ALL,
        value: en_US.UTF-8
      },
      {
        name: HADOOP_HOME,
        value: /opt/hadoop
      }
    ]

  replicaCount: 1
  containerPort: 10000
  name: rest
  affinity: { }
  ## Compute Resources required by this container. Cannot be updated.
  ## More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
  nodeSelector: { }
  ## Tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission,
  ## effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.
  tolerations: [ ]
  ## Affinity is a group of affinity scheduling rules. If specified, the pod's scheduling constraints.
  ## More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#affinity-v1-core
  resources: {
    limits: {
      memory: "2Gi",
      cpu: "1"
    },
    requests: {
      memory: "1Gi",
      cpu: "1"
    }
  }

  # resources:
  #   limits:
  #     memory: "2Gi"
  #     cpu: "1"
  #   requests:
  #     memory: "1Gi"
  #     cpu: "500m"
  ## Indicates whether the container is running. If the liveness probe fails, the kubelet kills the container,
  ## and the container is subjected to its restart policy.
  ## More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    enabled: true
    containerPort: 10000
    livenessPath: "/actuator/health/liveness"
    initialDelaySeconds: "45"
    periodSeconds: "30"
    timeoutSeconds: "20"
    failureThreshold: "3"
    successThreshold: "1"
  ## Indicates whether the container is ready to respond to requests. If the readiness probe fails,
  ## the endpoints controller removes the Pod's IP address from the endpoints of all Services that match the Pod.
  ## More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  readinessProbe:
    enabled: true
    containerPort: 10000
    readinessPath: "/actuator/health/liveness"
    initialDelaySeconds: "45"
    periodSeconds: "30"
    timeoutSeconds: "20"
    failureThreshold: "3"
    successThreshold: "1"

  volumeMounts:
    - name: flink-default-config-volume
      # config your flink conf path
      mountPath: /opt/flink-1.19.1/conf/
    - name: flink-old-config-volume
      mountPath: /opt/flink-1.17.2/conf/
    - name: kube-config-volume
      mountPath: /root/.kube
    - name: streampark-volume
      mountPath: /tmp/workspace
  volumes:
    - name: flink-default-config-volume
      configMap:
        name: flink-console-config
        items:
          # the flink default conf file has changed name since flink 1.19
          - key: config.yaml
            path: config.yaml
    - name: flink-old-config-volume
      configMap:
        name: flink-console-config
        items:
          # flink 1.18 and before
          - key: flink-conf.yaml
            path: flink-conf.yaml
    - name: kube-config-volume
      secret:
        secretName: kube-config
        items:
          - key: config
            path: config
    - name: streampark-volume
      persistentVolumeClaim:
        claimName: streampark-pvc

ingress:
  enabled: true
  host: "streampark.apache.org"
  path: "/streampark(/|$)(.*)"
  pathType: "ImplementationSpecific"
  annotations: {
    nginx.ingress.kubernetes.io/rewrite-target: "/$2",
    nginx.ingress.kubernetes.io/proxy-body-size: "1024m",
    ## fix swagger 404: https://github.com/springdoc/springdoc-openapi/issues/1741
    ## add rewrite ^/v3/(.*)$ /streampark/v3/$1 redirect;
    nginx.ingress.kubernetes.io/configuration-snippet: 'rewrite ^(/streampark)$ $1/ permanent;',
    kubernetes.io/ingress.class: "nginx"
  }
  tls:
    enabled: false
    ## Secret that contains the TLS certificate
    tlsSecretName: streampark-tls-secret

service:
  ## type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer
  type: "NodePort"
  name: "streampark-service"

streamParkDefaultConfiguration:
  create: true
  # Set append to false to replace configuration files
  append: true
  # application.yaml: |+
  #   ...
  # logback-spring.xml: |+
  #   ...

flinkDefaultConfiguration:
  create: true
  append: true

flinkOldConfiguration:
  create: true
  append: true

streamParkServiceAccount:
  create: true
  annotations: {}
  name: "streampark"

workSpace:
  # the workspace path configured in your streampark configuration file
  path: /tmp/workspace
  storageSize: 10Gi

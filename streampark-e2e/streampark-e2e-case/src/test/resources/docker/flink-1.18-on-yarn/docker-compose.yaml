# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

services:
  namenode:
    image: apache/streampark-flink-1.18.1-on-yarn:ci
    hostname: namenode
    command: [ "hdfs", "namenode" ]
    networks:
      - e2e
    build:
      context: ./
    ports:
      - "19870:9870"
    env_file:
      - docker-compose.config
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "1"
    tty: true
    stdin_open: true
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "http://namenode:9870" ]
      interval: 5s
      timeout: 5s
      retries: 120
  datanode:
    image: apache/streampark-flink-1.18.1-on-yarn:ci
    hostname: datanode
    command: [ "hdfs", "datanode" ]
    networks:
      - e2e
    build:
      context: ./
    env_file:
      - docker-compose.config
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "1"
    tty: true
    stdin_open: true
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "http://datanode:9864" ]
      interval: 5s
      timeout: 5s
      retries: 120
    depends_on:
      namenode:
        condition: service_healthy
  resourcemanager:
    image: apache/streampark-flink-1.18.1-on-yarn:ci
    hostname: resourcemanager
    command: [ "yarn", "resourcemanager" ]
    networks:
      - e2e
    build:
      context: ./
    ports:
      - "18088:8088"
    env_file:
      - docker-compose.config
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "1"
    tty: true
    stdin_open: true
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "http://resourcemanager:8088" ]
      interval: 5s
      timeout: 5s
      retries: 120
  nodemanager:
    image: apache/streampark-flink-1.18.1-on-yarn:ci
    hostname: nodemanager
    command: [ "yarn", "nodemanager" ]
    networks:
      - e2e
    build:
      context: ./
    env_file:
      - docker-compose.config
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "1"
    tty: true
    stdin_open: true
    restart: always
    depends_on:
      resourcemanager:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "http://nodemanager:8042" ]
      interval: 5s
      timeout: 5s
      retries: 120
  streampark:
    image: apache/streampark-flink-1.18.1-on-yarn:ci
    hostname: streampark
    command:
      - sh
      - -c
      - /streampark/bin/streampark.sh start_docker
    networks:
      - e2e
    build:
      context: ./
    ports:
      - "20000:10000"
    environment:
      - SPRING_PROFILES_ACTIVE=h2
      - TZ=Asia/Shanghai
    env_file:
      - docker-compose.config
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "1"
    tty: true
    stdin_open: true
    restart: always
    depends_on:
      namenode:
        condition: service_healthy
      datanode:
        condition: service_healthy
      resourcemanager:
        condition: service_healthy
      nodemanager:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "http://streampark:10000" ]
      interval: 5s
      timeout: 5s
      retries: 120

networks:
  e2e:
